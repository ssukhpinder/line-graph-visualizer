import { DataExtractorApi, DataResult, JSONString, DataExtractor } from "./DataExtractorApi";
import { ExtractedData } from "../../DataExtractionResult";
export declare class DataExtractorApiImpl implements DataExtractorApi {
    static lastEvalFn: (<T>(expression: string) => T) | undefined;
    private readonly extractors;
    private toJson;
    registerExtractor<TExtractedData extends ExtractedData>(extractor: DataExtractor<TExtractedData>): void;
    registerExtractors(extractors: DataExtractor<ExtractedData>[]): void;
    getData(valueFn: () => unknown, evalFn: <T>(expression: string) => T, preferredDataExtractorId: string | undefined): JSONString<DataResult>;
    registerDefaultExtractors(preferExisting?: boolean): void;
}
//# sourceMappingURL=DataExtractorApiImpl.d.ts.map